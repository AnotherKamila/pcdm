#!/sbin/openrc-run
# Copyright (c) 2016 Joe Maloney <jmaloney@ixsystems.com>
# Copyright (c) 2017 Ken Moore <ken@ixsystems.com>
# Released under the 2-clause BSD license.

name="PCDM"
description="Graphical Display Manager"

#Determine the system install prefix
if [ -z "${PREFIX}" ] ; then
  SERVICEDIR="/usr/local/etc/init.d"
else
  SERVICEDIR="${PREFIX}/etc/init.d"
fi

#Get the sub-service VT device
vt=${RC_SVCNAME##*.}
if [ -n "${vt}" ] && [ "${vt}" != "pcdm" ] ; then
  vt_device="${vt}"
fi

#If no sub device, detect/launch the sub services
if [ -n "${vt_device}" ] ; then
  name="${name} (${vt_device})"
  command="/usr/local/sbin/PCDMd ${vt_device}"
  #supervisor="supervise-daemon"
  command_background="true"
  pidfile="/var/run/PCDMd-${vt_device}.pid"
fi

if [ -z "${pcdm_args}" ] ; then
  pcdm_args="vt9"
fi

cleanup_sessions() {
  rm /var/tmp/.PCDMAu* 1> /dev/null 2> /dev/null
  for subservice in `ls ${SERVICEDIR}/pcdm.* 2> /dev/null`
  do
    rm "${subservice}"
  done
  # clean up any lingering pcdm session files
  rm /pcdm-session.${vt_device}.* > /dev/null 2>&1 
  return 0
}

if [ -z "${vt_device}" ]; then
  extra_commands="setupx"
fi

setupx(){
  touch /var/.runxsetup
  /sbin/service pcdm restart
}

start_pre() {
  # Check if boot-loader set option to skip xorg
  if [ "`kenv noxorg 2>/dev/null`" = "YES" ] ; then
    exit 1
  fi

  if [ -e /var/run/nologin ]; then
	exit 1 
  fi	
  if [ -z "${vt_device}" ] ; then
    #Make sure that Xorg is setup properly (if needed)
    # Before creating all the sub-services
    if [ -e "/usr/local/bin/pc-checkxdisplay" ]; then
      /usr/local/bin/pc-checkxdisplay
    fi
    export OPENRC_SILENT=TRUE
    cleanup_sessions #ensure things are cleaned up ahead of time
    for vtdev in ${pcdm_args}
    do
      if [ ! -f "${SERVICEDIR}/pcdm.${vtdev}" ] ; then
        ln -fs "${SERVICEDIR}/pcdm" "${SERVICEDIR}/pcdm.${vtdev}"
      fi
      if service_stopped pcdm.${vtdev} ; then
        einfo "Starting session on ${vtdev}"
        /sbin/service pcdm.${vtdev} start -q
        sleep 1 #give the session a second to startup X to prevent conflicts in display numbers
      fi
    done
    exit 0;
  fi
}

stop() {
  if [ -z "${vt_device}" ] ; then
    export OPENRC_SILENT=TRUE
    for vtdev in ${pcdm_args}
    do
      if [ -e "${SERVICEDIR}/pcdm.${vtdev}" ]; then
        
        if service_started pcdm.${vtdev} ; then
          einfo "Stopping session on ${vtdev}"
          /sbin/service pcdm.${vtdev} stop -q
        fi
      fi
    done
  else
	#Make sure PCDMd knows that we intend to stop X
	${command} stop
  fi
  return 0
}

stop_post() {
  if [ -z "${vt_device}" ] ; then
    export OPENRC_SILENT=TRUE
    cleanup_sessions
  fi
}

depend() {
	if [ ! -z "${vt_device}" ] ; then 
	  need urandom
	  after bootmisc syscons mouse localmount
	  keyword -shutdown
	fi
}
